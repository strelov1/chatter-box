config:
  target: "http://localhost:80"
  processor: "./random_ip.js"
  phases:
    - duration: 5
      arrivalRate: 5
      name: "Warm-up"

    - duration: 30
      arrivalRate: 10
      name: "Sustained load"

    - duration: 10
      arrivalRate: 5
      name: "Cool-down"
  plugins:
    ensure: {}
  protocols:
    socketio:
      transport: "websocket"
      path: "/socket.io"
  ensure:
    thresholds:
      - 'socketio.response_time.mean': 200

before:
  flow:
    - post:
        url: "/api/login"
        json:
          username: "{{ $randomString(10) }}"
          password: "password123"
        capture:
          - json: "$.authKey"
            as: "authKey1"
    - post:
        url: "/api/login"
        json:
          username: "{{ $randomString(10) }}"
          password: "password123"
        capture:
          - json: "$.authKey"
            as: "authKey2"

scenarios:
  - engine: "socketio"
    flow:
      - emit:
          channel: "authenticate"
          data:
            userId: "{{ authKey1 }}"
          on: "authenticated"
      - emit:
          headers:
            x-real-ip: "{{ ip }}"
          channel: "authenticate"
          data:
            userId: "{{ authKey2 }}"
      - emit:
          headers:
            x-real-ip: "{{ ip }}"
          channel: "group:create"
          data:
            name: "Test Group {{ $randomNumber(1, 1000) }}"
            members: ["{{ authKey1 }}", "{{ authKey2 }}"]
        response:
          on: "group:created"
          capture:
            json: "$[0]"
            as: "createdGroup"
      # - log: "createdGroup: {{ createdGroup }}"
      - loop:
          - emit:
              headers:
                x-real-ip: "{{ ip }}"
              channel: "message:create"
              data:
                groupId: "{{ createdGroup._id }}"
                text: "Hello World!"
        count: 500
